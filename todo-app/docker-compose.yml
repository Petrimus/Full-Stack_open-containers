services:
  app:
    image: hello-front-dev
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"   
    environment: 
      - REACT_APP_BACKEND_URL=http://localhost:8080/api
    container_name: hello-front-dev # This will name the container hello-front-dev

  server:
    build:
      context: ./todo-backend
      dockerfile: Dockerfile 
    container_name: backend-server-dev
    ports: 
      - 3001   
    environment: 
      - REDIS_URL=redis://cache:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo_database:27017/the_database

  database:
    image: mongo
    restart: always
    container_name: mongo_database    
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongo_data:/data/db
      - mongo_configdb:/data/configdb

  redis:
    image: redis
    container_name: cache   
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - ./todo-backend/redis_data:/data  

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: proxy
      
volumes:
  mongo_data:
  redis_data:
  mongo_configdb:
